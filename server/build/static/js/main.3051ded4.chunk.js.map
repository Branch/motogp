{"version":3,"sources":["assets/images/wheel.svg","assets/images/tracks/le-mans.svg","assets/images/tracks/chang.svg","assets/images/tracks/ricardo-tormo.svg","assets/images/tracks/redbullring.svg","assets/images/tracks/mugello.svg","assets/images/tracks/silverstone.svg","assets/images/tracks/motegi.svg","assets/images/tracks/catalunya.svg","assets/images/tracks/assen.svg","assets/images/tracks/sachsenring.svg","assets/images/tracks/misano.svg","assets/images/tracks/aragon.svg","assets/images/tracks/argentina.svg","assets/images/tracks/cota.svg","assets/images/tracks/jerez.svg","assets/images/tracks/philip-island.svg","assets/images/tracks/qatar.svg","assets/images/tracks/sepang.svg","assets/images/fabio-tinted.png","assets/images/sun.svg","assets/images/rain.svg","assets/images/about-bg.svg","components/scrollTo.js","components/track.js","views/main.js","components/dropdown.js","components/weather.js","helpers/country.js","views/results.js","views/about.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ScrollTo","props","className","onClick","id","Track","track","src","lemans","mugello","qatar","jerez","catalunya","saxen","assen","redbull","silverstone","aragon","misano","motegi","chang","pa","sepang","ricardo","argentina","cota","Index","useState","menuClass","setMenuClass","firstOffset","setFirstOffset","showShareMenu","setShareMenuStatus","shortName","fullName","latestRace","setLatestRace","useEffect","interval","setInterval","clearInterval","getLatestRace","a","fetch","results","json","data","html","window","document","createElement","innerHTML","getElementsByTagName","options","selectedIndex","value","e","currentTarget","classList","contains","type","target","href","navigator","clipboard","writeText","location","viewBox","xmlns","fill","d","x1","y1","x2","y2","offset","scroll","Marc","Dropdown","undefined","noOfCategories","onActiveClick","icon","faSortDown","activeItem","class","isOpen","listItems","Weather","Sun","degrees","Rain","CountryTranslate","val","country","Results","year","Date","getFullYear","dropdownOpen","activeYear","assignYear","clicked","loading","button","assignButtonStatus","status","error","setErrorStatus","changed","filtersChanged","assignFilterStatus","race","raceName","activeRace","assignRace","category","activeCategory","assignCategory","session","activeSession","assignSession","air","raceLapRecord","sessionBestLapLap","sessionBestLapTime","sessionBestLapRider","sessionBestLapSpeed","lapRecordYear","lapRecordLapTime","lapRecordRider","lapRecordSpeed","raceLapRecordYear","raceLapRecordLapTime","raceLapRecordRider","raceLapRecordSpeed","poleLap","activeSessionData","assignSessionData","activeType","assignType","text","visible","loadedSessionInfo","assignLoadedSessionInfo","loadingRaces","setLoadingRaces","loadingCategories","setLoadingCategories","loadingSessions","setLoadingSessions","yearsInFilter","assignYears","racesInFilter","assignRaces","categoriesInFilter","assignCategories","sessionsInFilter","assignSessions","resultsTable","setResultsTable","sessionTable","setSessionTable","tableHeader","setTableHeader","sessionTableHeader","setSessionTableHeader","setLoadedRaceInfo","setYears","years","i","push","elements","map","yearClick","fetchRaces","URLSearchParams","races","JSON","parse","raceElements","firstRace","firstRaceName","first","Object","keys","key","shortname","title","raceClick","fetchCategories","categories","length","firstCategory","name","categoryClick","fetchSessions","sessions","firstSession","sessionClick","typeClick","fetchResults","then","res","rowCounter","newResultsTable","leaderPoints","tmpPoints","diffToLeader","diffToAbove","rows","row","cellCounter","cells","cell","innerText","Country","fetchSession","sessionInfoTable","sessionTrackInfo","getElementsByClassName","split","sessionWeatherInfo","includes","showGap","showPoints","buttonClick","ref","refProp","Loader","Fade","in","dangerouslySetInnerHTML","__html","About","Background","App","myRef","useRef","content","property","current","scrollIntoView","behavior","block","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.3051ded4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wheel.7169ad23.svg\";","module.exports = __webpack_public_path__ + \"static/media/le-mans.02455d84.svg\";","module.exports = __webpack_public_path__ + \"static/media/chang.79caef21.svg\";","module.exports = __webpack_public_path__ + \"static/media/ricardo-tormo.ff6becd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/redbullring.8df297fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/mugello.10c69c69.svg\";","module.exports = __webpack_public_path__ + \"static/media/silverstone.fef5bb74.svg\";","module.exports = __webpack_public_path__ + \"static/media/motegi.44b4a106.svg\";","module.exports = __webpack_public_path__ + \"static/media/catalunya.c915049c.svg\";","module.exports = __webpack_public_path__ + \"static/media/assen.45bab394.svg\";","module.exports = __webpack_public_path__ + \"static/media/sachsenring.f18deb4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/misano.20fca82e.svg\";","module.exports = __webpack_public_path__ + \"static/media/aragon.e1b62b6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/argentina.f00e7fbb.svg\";","module.exports = __webpack_public_path__ + \"static/media/cota.8b4ab74a.svg\";","module.exports = __webpack_public_path__ + \"static/media/jerez.fa0e069c.svg\";","module.exports = __webpack_public_path__ + \"static/media/philip-island.b6613a23.svg\";","module.exports = __webpack_public_path__ + \"static/media/qatar.69f01b31.svg\";","module.exports = __webpack_public_path__ + \"static/media/sepang.a20e7dfe.svg\";","module.exports = __webpack_public_path__ + \"static/media/fabio-tinted.c64f6f24.png\";","module.exports = __webpack_public_path__ + \"static/media/sun.065060cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.12a3d6f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/about-bg.74087b9c.svg\";","import React, { useRef } from 'react'\n\n// General scroll to element function\n\nconst ScrollTo = (props) => {\n\n    return (\n            <div className=\"center-con\" onClick={props.onClick}>\n                <div className=\"round\">\n                    <div id=\"cta\">\n                        <span className=\"arrow primera next \"></span>\n                        <span className=\"arrow segunda next \"></span>\n                    </div>\n                </div>\n        </div>\n    )\n}\n\nexport default ScrollTo;","import React from 'react'\nimport lemans from '../assets/images/tracks/le-mans.svg';\nimport chang from '../assets/images/tracks/chang.svg';\nimport ricardo from '../assets/images/tracks/ricardo-tormo.svg';\nimport redbull from '../assets/images/tracks/redbullring.svg';\nimport mugello from '../assets/images/tracks/mugello.svg';\nimport silverstone from '../assets/images/tracks/silverstone.svg';\nimport motegi from '../assets/images/tracks/motegi.svg';\nimport catalunya from '../assets/images/tracks/catalunya.svg';\nimport assen from '../assets/images/tracks/assen.svg';\nimport saxen from '../assets/images/tracks/sachsenring.svg';\nimport misano from '../assets/images/tracks/misano.svg';\nimport aragon from '../assets/images/tracks/aragon.svg';\nimport argentina from '../assets/images/tracks/argentina.svg';\nimport cota from '../assets/images/tracks/cota.svg';\nimport jerez from '../assets/images/tracks/jerez.svg';\nimport pa from '../assets/images/tracks/philip-island.svg';\nimport qatar from '../assets/images/tracks/qatar.svg';\nimport sepang from '../assets/images/tracks/sepang.svg';\n\nconst Track = (props) => {\n    if(props.track === 'FRA') {\n        return <img className={'medium shadow'} src={lemans} />;\n    } else if(props.track === 'ITA') {\n        return <img className={'medium shadow'} src={mugello} />;\n    } else if(props.track === 'QAT' || props.track === 'DOH') {\n        return <img className={'medium shadow'} src={qatar} />;\n    } else if(props.track === 'SPA') {\n        return <img src={jerez} />;\n    } else if(props.track === 'CAT') {\n        return <img className={'large'} src={catalunya} />;\n    } else if(props.track === 'GER') {\n        return <img className={'large shadow'} src={saxen} />;\n    } else if(props.track === 'NED') {\n        return <img className={'medium'} src={assen} />;\n    } else if(props.track === 'STY' || props.track === 'AUT') {\n        return <img className={'large shadow'} src={redbull} />;\n    } else if(props.track === 'GBR') {\n        return <img src={silverstone} />;\n    } else if(props.track === 'ARA') {\n        return <img className={'medium shadow'} src={aragon} />;\n    } else if(props.track === 'RSM') {\n        return <img className={'large shadow'} src={misano} />;\n    } else if(props.track === 'JPN') {\n        return <img className={'medium shadow'} src={motegi} />;\n    } else if(props.track === 'THA') {\n        return <img className={'large'} src={chang} />;\n    } else if(props.track === 'AUS') {\n        return <img className={'large shadow'} src={pa} />;\n    } else if(props.track === 'MAL') {\n        return <img className={'medium shadow'} src={sepang} />;\n    } else if(props.track === 'VAL') {\n        return <img className={'large shadow'} src={ricardo} />;\n    } else if(props.track === 'ARG') {\n        return <img className={'medium shadow'} src={argentina} />;\n    } else if(props.track === 'AME') {\n        return <img className={'medium shadow'} src={cota} />;\n    }\n    return null;\n}\n\nexport default Track;","import React, {useEffect, useState} from 'react';\nimport Marc from '../assets/images/fabio-tinted.png'\nimport ScrollTo from \"../components/scrollTo\";\nimport Track from \"../components/track\";\nimport lemans from \"../assets/images/tracks/le-mans.svg\";\nimport mugello from \"../assets/images/tracks/mugello.svg\";\nimport qatar from \"../assets/images/tracks/qatar.svg\";\nimport jerez from \"../assets/images/tracks/jerez.svg\";\nimport catalunya from \"../assets/images/tracks/catalunya.svg\";\nimport saxen from \"../assets/images/tracks/sachsenring.svg\";\nimport assen from \"../assets/images/tracks/assen.svg\";\nimport redbull from \"../assets/images/tracks/redbullring.svg\";\nimport silverstone from \"../assets/images/tracks/silverstone.svg\";\nimport aragon from \"../assets/images/tracks/aragon.svg\";\nimport misano from \"../assets/images/tracks/misano.svg\";\nimport motegi from \"../assets/images/tracks/motegi.svg\";\nimport chang from \"../assets/images/tracks/chang.svg\";\nimport pa from \"../assets/images/tracks/philip-island.svg\";\nimport sepang from \"../assets/images/tracks/sepang.svg\";\nimport ricardo from \"../assets/images/tracks/ricardo-tormo.svg\";\nimport argentina from \"../assets/images/tracks/argentina.svg\";\nimport cota from \"../assets/images/tracks/cota.svg\";\n\n\n\nfunction Index(props) {\n\n    const [menuClass, setMenuClass] = useState('')\n    const [firstOffset, setFirstOffset] = useState(0)\n    const [showShareMenu, setShareMenuStatus] = useState(false)\n    const [latestRace, setLatestRace] = useState({\n        shortName: '',\n        fullName: ''\n    })\n\n\n    const menuClick = (e) => {\n        let className = e.currentTarget.classList.contains('is-active') ? '' : 'is-active';\n        setMenuClass(className);\n    }\n\n    const shareToggler = () => {\n        setShareMenuStatus(!showShareMenu)\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if(firstOffset < 100) {\n                setFirstOffset(firstOffset + 1)\n            }\n        }, 25)\n        return () => clearInterval(interval)\n    })\n\n    useEffect(() => {\n        if(firstOffset <= 0) {\n            getLatestRace();\n        }\n    })\n\n    const getLatestRace = async () => {\n        const results = await fetch(`/motogp/latest`);\n        const data = await results.json()\n        let html = window.document.createElement('html');\n        html.innerHTML = data.data\n        let shortName = html.getElementsByTagName('select')[1].options[html.getElementsByTagName('select')[1].selectedIndex].value\n        let fullName = '';\n\n        shortName = 'AME'\n\n        if(shortName === 'FRA') {\n            fullName = 'Le mans';\n        } else if(shortName === 'ITA') {\n            fullName = 'Mugello';\n        } else if(shortName === 'QAT' || shortName === 'DOH') {\n            fullName = 'Qatar';\n        } else if(shortName === 'SPA') {\n            fullName = 'Jerez';\n        } else if(shortName === 'CAT') {\n            fullName = 'Catalunya';\n        } else if(shortName === 'GER') {\n            fullName = 'Sachsenring';\n        } else if(shortName === 'NED') {\n            fullName = 'Assen';\n        } else if(shortName === 'STY' || shortName === 'AUT') {\n            fullName = 'Red bull ring';\n        } else if(shortName === 'GBR') {\n            fullName = 'Silverstone';\n        } else if(shortName === 'ARA') {\n            fullName = 'Aragon';\n        } else if(shortName === 'RSM') {\n            fullName = 'Misano';\n        } else if(shortName === 'JPN') {\n            fullName = 'Motegi';\n        } else if(shortName === 'THA') {\n            fullName = 'Chang';\n        } else if(shortName === 'AUS') {\n            fullName = 'Phillip Island';\n        } else if(shortName === 'MAL') {\n            fullName = 'Sepang';\n        } else if(shortName === 'VAL') {\n            fullName = 'Valencia';\n        } else if(shortName === 'ARG') {\n            fullName = 'Argentina';\n        } else if(shortName === 'AME') {\n            fullName = 'COTA';\n        }\n\n        setLatestRace({shortName: shortName, fullName: fullName})\n    }\n\n\n\n    return <div className={'index-main'}>\n        <button onClick={menuClick} className={menuClass + \" hamburger hamburger--spin\"} type=\"button\">\n                <span className=\"hamburger-box\">\n                    <span className=\"hamburger-inner\"></span>\n                </span>\n        </button>\n        <button onClick={shareToggler} className={showShareMenu === true ? 'app-share active' : 'app-share'}>\n            <i className=\"fas fa-share-alt\"></i>\n            <div className={'app-share__links'}>\n                <a className={'facebook'} target={'_blank'} href={'https://www.facebook.com/sharer/sharer.php?u=http://stackoverflow.com'}><i className=\"fab fa-facebook-f\"></i></a>\n                <a className={'twitter'} target={'_blank'} href={'https://twitter.com/intent/tweet?text=http://mywebsite'}><i className=\"fab fa-twitter\"></i></a>\n                <a className={'reddit'} target={'_blank'} href={'https://www.reddit.com/submit?url=http://mywebsite'}><i className=\"fab fa-reddit\"></i></a>\n                <a className={'general'} onClick={() => {navigator.clipboard.writeText(window.location.href)}}><i className=\"fas fa-link\"></i></a>\n            </div>\n        </button>\n        <a className={'app-contact'} href={\"mailto:contact@domain.se\"}><i className=\"fas fa-envelope\"></i></a>\n        <div className={'app-latest'}>\n            <svg viewBox=\"0 0 300 300\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path fill=\"#FFA17A\" d=\"M37.5,186c-12.1-10.5-11.8-32.3-7.2-46.7c4.8-15,13.1-17.8,30.1-36.7C91,68.8,83.5,56.7,103.4,45 c22.2-13.1,51.1-9.5,69.6-1.6c18.1,7.8,15.7,15.3,43.3,33.2c28.8,18.8,37.2,14.3,46.7,27.9c15.6,22.3,6.4,53.3,4.4,60.2 c-3.3,11.2-7.1,23.9-18.5,32c-16.3,11.5-29.5,0.7-48.6,11c-16.2,8.7-12.6,19.7-28.2,33.2c-22.7,19.7-63.8,25.7-79.9,9.7 c-15.2-15.1,0.3-41.7-16.6-54.9C63,186,49.7,196.7,37.5,186z\" />\n            </svg>\n            <div className={'app-latest-top'}>\n                Latest race\n            </div>\n            <div className={'app-latest-track'}>\n                <Track\n                    track={latestRace.shortName}\n                />\n            </div>\n            <div className={'app-latest-small'}>\n                {latestRace.fullName}\n            </div>\n        </div>\n        <svg className={'app-latest__race'} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 520\">\n            <linearGradient id=\"grad-bottom\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                <stop offset={firstOffset + \"%\"} />\n                <stop offset=\"10%\" />\n            </linearGradient>\n            <path fill={'url(#grad-bottom)'} d=\"M0,64L20,69.3C40,75,80,85,120,128C160,171,200,245,240,234.7C280,224,320,128,360,112C400,96,440,160,480,170.7C520,181,560,139,600,133.3C640,128,680,160,720,149.3C760,139,800,85,840,96C880,107,920,181,960,197.3C1000,213,1040,171,1080,128C1120,85,1160,43,1200,64C1240,85,1280,171,1320,186.7C1360,203,1400,149,1420,122.7L1440,96L1440,520L1420,520C1400,520,1360,520,1520,520C1280,520,1240,520,1200,520C1160,520,1120,520,1080,520C1040,520,1000,520,960,520C920,520,880,520,840,520C800,520,760,520,720,520C680,520,640,520,600,520C560,520,520,520,480,520C440,520,400,520,360,520C520,520,280,520,240,520C200,520,160,520,120,520C80,520,40,520,20,520L0,520Z\">\n            </path>\n        </svg>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 520\">\n            <linearGradient id=\"grad-mid\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                <stop offset=\"0%\" />\n                <stop offset=\"71%\" />\n            </linearGradient>\n            <path fill={'url(#grad-mid)'} d=\"M0,64L20,69.3C40,75,80,85,120,128C160,171,200,245,240,234.7C280,224,320,128,360,112C400,96,440,160,480,170.7C520,181,560,139,600,133.3C640,128,680,160,720,149.3C760,139,800,85,840,96C880,107,920,181,960,197.3C1000,213,1040,171,1080,128C1120,85,1160,43,1200,64C1240,85,1280,171,1320,186.7C1360,203,1400,149,1420,122.7L1440,96L1440,520L1420,520C1400,520,1360,520,1520,520C1280,520,1240,520,1200,520C1160,520,1120,520,1080,520C1040,520,1000,520,960,520C920,520,880,520,840,520C800,520,760,520,720,520C680,520,640,520,600,520C560,520,520,520,480,520C440,520,400,520,360,520C520,520,280,520,240,520C200,520,160,520,120,520C80,520,40,520,20,520L0,520Z\">\n            </path>\n        </svg>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 520\">\n            <linearGradient id=\"grad-top\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                <stop offset=\"0%\" />\n                <stop offset=\"71%\" />\n            </linearGradient>\n            <path fill={'url(#grad-top)'} d=\"M0,64L20,69.3C40,75,80,85,120,128C160,171,200,245,240,234.7C280,224,320,128,360,112C400,96,440,160,480,170.7C520,181,560,139,600,133.3C640,128,680,160,720,149.3C760,139,800,85,840,96C880,107,920,181,960,197.3C1000,213,1040,171,1080,128C1120,85,1160,43,1200,64C1240,85,1280,171,1320,186.7C1360,203,1400,149,1420,122.7L1440,96L1440,520L1420,520C1400,520,1360,520,1520,520C1280,520,1240,520,1200,520C1160,520,1120,520,1080,520C1040,520,1000,520,960,520C920,520,880,520,840,520C800,520,760,520,720,520C680,520,640,520,600,520C560,520,520,520,480,520C440,520,400,520,360,520C520,520,280,520,240,520C200,520,160,520,120,520C80,520,40,520,20,520L0,520Z\">\n            </path>\n        </svg>\n        \n        <div className={'index-main container'}>\n            <ScrollTo\n                onClick={props.scroll}\n            />\n            <div className={'index-main-title'}>\n                <div className={'index-main-title-text'}>\n                    <h1>Simple MotoGP results</h1>\n                    <div className={'separator'}></div>\n                    <p>This site is meant to show results from MotoGP in a simple and accessible way.<br />Note that this site is a hobby of mine and is<span className={'highlight'}> not affiliated with MotoGP / Dorna.</span></p>\n                </div>\n                <div className={'index-main-title-images'}>\n                    <img src={Marc} />\n                    <img src={Marc} />\n                </div>\n            </div>\n        </div>\n        <div className={'index-main-overlay'}></div>\n    </div>\n}\n\nexport default Index;","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons'\n\nconst Dropdown = (props) => {\n    if(props.noOfCategories === undefined || props.noOfCategories > 0) {\n        return (\n            <div className={'dropdown__container'}>\n                <div onClick={props.onActiveClick} className={'dropdown__container__active'}>\n                    <FontAwesomeIcon icon={faSortDown} />\n                    {props.activeItem}</div>\n                <div className={`dropdown__container__${props.class} ${props.isOpen === true ? 'open' : ''}`}>\n                    {props.listItems}\n                </div>\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default Dropdown;","import React from 'react'\nimport Sun from '../assets/images/sun.svg';\nimport Rain from '../assets/images/rain.svg';\n\nconst Weather = (props) => {\n    if(props.type === 'Dry') {\n        return (\n            <div>\n                <img src={Sun} />\n                {props.degrees} C\n            </div>\n        )\n    } else if(props.type === 'Wet') {\n        return (\n            <div>\n                <img src={Rain} />\n                {props.degrees} C\n            </div>\n        )\n    }\n    return null;\n}\n\nexport default Weather;","import React from 'react';\n\nfunction CountryTranslate(val) {\n    let country = '';\n\n    if(val === 'SPA') {\n        country = 'es';\n    } else if(val === 'POR') {\n        country = 'pt';\n    } else if(val === 'FRA') {\n        country = 'fr';\n    } else if(val === 'ITA') {\n        country = 'it';\n    } else if(val === 'RSA') {\n        country = 'za';\n    } else if(val === 'JPN') {\n        country = 'jp';\n    } else if(val === 'AUS') {\n        country = 'au';\n    } else if(val === 'GER') {\n        country = 'de';\n    } else if(val === 'GBR') {\n        country = 'gb';\n    } else if(val === 'POR') {\n        country = 'pt';\n    } else if(val === 'USA') {\n        country = 'us';\n    } else if(val === 'NED') {\n        country = 'nl';\n    } else if(val === 'POR') {\n        country = 'pt';\n    } else if(val === 'SWI') {\n        country = 'ch';\n    } else if(val === 'THA') {\n        country = 'th';\n    } else if(val === 'MAL') {\n        country = 'my';\n    } else if(val === 'ARG') {\n        country = 'ar';\n    } else if(val === 'CZE') {\n        country = 'cz';\n    } else if(val === 'AUT') {\n        country = 'au';\n    } else if(val === 'TUR') {\n        country = 'tr';\n    } else if(val === 'INA') {\n        country = 'id';\n    } else if(val === 'COL') {\n        country = 'cl';\n    } else if(val === 'FIN') {\n        country = 'fi';\n    } else if(val === 'BEL') {\n        country = 'be';\n    }\n\n    return country;\n}\n\nexport default CountryTranslate;","import React, {useEffect, useState} from 'react';\nimport { Fade } from '@material-ui/core';\nimport Dropdown from '../components/dropdown';\nimport Weather from '../components/weather';\nimport Loader from '../assets/images/wheel.svg';\nimport Country from '../helpers/country';\n\nfunction Results(props) {\n\n    const [activeYear, assignYear] = useState({\n        year: new Date().getFullYear(),\n        dropdownOpen: false\n    })\n    const [button, assignButtonStatus] = useState({\n        clicked: false,\n        loading: false,\n    })\n\n    const [error, setErrorStatus] = useState({\n        status: false\n    })\n\n    const [filtersChanged, assignFilterStatus] = useState({\n        changed: false,\n    })\n    const [activeRace, assignRace] = useState({\n        race: '',\n        raceName: '',\n        dropdownOpen: false\n    })\n\n    const [activeCategory, assignCategory] = useState({\n        category: '',\n        dropdownOpen: false\n    })\n\n    const [activeSession, assignSession] = useState({\n        session: '',\n        dropdownOpen: false\n    })\n\n    const [activeSessionData, assignSessionData] = useState({\n        track: '',\n        air: '',\n        raceLapRecord: '',\n        sessionBestLapLap: '',\n        sessionBestLapTime: '',\n        sessionBestLapRider: '',\n        sessionBestLapSpeed: '',\n        lapRecordYear: '',\n        lapRecordLapTime: '',\n        lapRecordRider: '',\n        lapRecordSpeed: '',\n        raceLapRecordYear: '',\n        raceLapRecordLapTime: '',\n        raceLapRecordRider: '',\n        raceLapRecordSpeed: '',\n        poleLap: ''\n    })\n\n    const [activeType, assignType] = useState({\n        type: 'Session',\n        dropdownOpen: false\n    })\n    const [loadedSessionInfo, assignLoadedSessionInfo] = useState({\n        text: '',\n        visible: false,\n        type: ''\n    })\n\n    const [loadingRaces, setLoadingRaces] = useState(false)\n    const [loadingCategories, setLoadingCategories] = useState(false)\n    const [loadingSessions, setLoadingSessions] = useState(false)\n    const [yearsInFilter, assignYears] = useState([])\n    const [racesInFilter, assignRaces] = useState([])\n    const [categoriesInFilter, assignCategories] = useState([])\n    const [sessionsInFilter, assignSessions] = useState([])\n    const [resultsTable, setResultsTable] = useState([])\n    const [sessionTable, setSessionTable] = useState([])\n    const [tableHeader, setTableHeader] = useState([])\n    const [sessionTableHeader, setSessionTableHeader] = useState([])\n\n    const setLoadedRaceInfo = async () => {\n        let text = '';\n\n        text = `Total standings as of ${activeRace.raceName}`;\n\n        if(activeType.type === 'Session') {\n            text = `${activeCategory.category} ${activeSession.session} of the ${activeRace.raceName}`;\n        }\n        assignLoadedSessionInfo({text: text, visible: true, type: activeType.type})\n    }\n\n    const setYears = async () => {\n        let years = [];\n\n        for(let i = new Date().getFullYear(); i >= 2012; i--) {\n            years.push(i)\n        }\n        let elements = years.map((year) =>\n            <div onClick={() => yearClick(year)}>{year}</div>\n        )\n        assignYears(elements)\n    }\n\n    const fetchRaces = async () => {\n\n        setLoadingRaces(true)\n\n        const results = await fetch(`/motogp/races?` + new URLSearchParams({\n            year: activeYear.year\n        }))\n        const data = await results.json();\n\n        setLoadingRaces(false)\n\n        let races = JSON.parse(data.data)\n\n        let raceElements = []\n        let firstRace = '';\n        let firstRaceName = '';\n\n        let first = true;\n        let race = {}\n        for (let key of Object.keys(races)) {\n            race = {}\n            if(first) {\n                firstRace = races[key].shortname;\n                firstRaceName = races[key].title;\n            }\n            race.race = races[key].shortname\n            race.raceName = races[key].title\n            raceElements.push(race)\n            first = false;\n        }\n\n        let elements = raceElements.map((race) =>\n            <div onClick={() => raceClick(race.race, race.raceName)}>{race.raceName}</div>\n        )\n        assignRaces(elements)\n\n        // Set active race when loading view\n        assignRace({race:firstRace, raceName:firstRaceName, dropdownOpen: false})\n\n    }\n\n    const fetchCategories  = async () => {\n        setLoadingCategories(true);\n        const results = await fetch(`/motogp/categories?` + new URLSearchParams({\n            year: activeYear.year,\n            race: activeRace.race\n        }))\n        const data = await results.json();\n        setLoadingCategories(false);\n        let categories = JSON.parse(data.data)\n\n        if(categories.length <= 0) {\n            setErrorStatus({status: true})\n        } else if(error.status === true) {\n            setErrorStatus({status: false})\n        }\n\n        let raceElements = []\n        let first = true\n        let firstCategory = ''\n        for (let key of Object.keys(categories)) {\n            if(first) {\n                firstCategory = categories[key].name\n            }\n            raceElements.push(categories[key].name)\n            first = false\n        }\n\n        let elements = raceElements.map((race) =>\n            <div onClick={() => categoryClick(race)}>{race}</div>\n        )\n        assignCategories(elements)\n\n        assignCategory({category:firstCategory, dropdownOpen: false})\n\n    }\n\n    const fetchSessions  = async () => {\n        setLoadingSessions(true);\n        const results = await fetch(`/motogp/sessions?` + new URLSearchParams({\n            year: activeYear.year,\n            race: activeRace.race,\n            category: activeCategory.category,\n        }))\n\n        const data = await results.json();\n        setLoadingSessions(false);\n        let sessions = JSON.parse(data.data)\n\n        if(sessions == null) {\n            return;\n        }\n\n        let raceElements = []\n        let first = true\n        let firstSession = ''\n        for (let key of Object.keys(sessions)) {\n            if(first) {\n                firstSession = sessions[key].name\n            }\n            raceElements.push(sessions[key].name)\n            first = false\n        }\n\n        let elements = raceElements.map((race) =>\n            <div onClick={() => sessionClick(race)}>{race}</div>\n        )\n        assignSessions(elements)\n        assignSession({session:firstSession, dropdownOpen: false})\n\n    }\n\n    const yearClick = async (year) => {\n        assignYear({year:year, dropdownOpen: false})\n    }\n\n    const raceClick = async (race, raceName) => {\n        assignRace({race:race,raceName: raceName, dropdownOpen: false})\n    }\n\n    const categoryClick = async (category) => {\n        assignCategory({category:category, dropdownOpen: false})\n    }\n\n    const sessionClick = async (session) => {\n        assignSession({session:session, dropdownOpen: false})\n    }\n\n    const typeClick = async (type) => {\n        assignType({type:type, dropdownOpen: false})\n    }\n\n    // Total standings\n    const fetchResults = async () => {\n        assignButtonStatus({clicked: true, loading: true})\n\n        fetch(`/motogp/standings?` + new URLSearchParams({\n            year: activeYear.year,\n            race: activeRace.race,\n            category: activeCategory.category,\n            session: 'RAC'\n        }))\n            .then(res => res.json()) // Process the incoming data\n            .then(json => {\n                let html = window.document.createElement('html');\n                html.innerHTML = json.data\n                let resultsTable = html.getElementsByTagName('table')[0]\n                let rowCounter = 0;\n                let newResultsTable = '';\n                let leaderPoints = 0;\n                let tmpPoints = 0;\n                let diffToLeader = 0;\n                let diffToAbove = 0;\n\n                for (let row of resultsTable.rows)\n                {\n                    let cellCounter = 0;\n                    if(rowCounter === 0) {\n                        rowCounter++;\n                        continue;\n                    }\n                    // Open tr\n                    newResultsTable += '<tr>';\n                    for(let cell of row.cells)\n                    {\n                        let val = cell.innerText;\n\n                        // First cell, holds position in championship\n                        if(cellCounter === 0) {\n                            newResultsTable += `<td>#${val}</td>`\n                            cellCounter++;\n                            continue;\n                        }\n\n                        // Country flag\n                        if(cellCounter === 3) {\n                            let country = Country(val);\n\n                            newResultsTable += `<td><img class='country-flag' src='https://cdn.jsdelivr.net/gh/hampusborgos/country-flags@main/svg/${country}.svg' /></td>`\n                            cellCounter++;\n                            continue;\n                        }\n                        newResultsTable += `<td>${val}</td>`\n\n                        // Hold points for leader\n                        if(rowCounter === 1) {\n                            leaderPoints = row.cells[row.cells.length-1].innerText;\n                        }\n\n                        // Hold points for current rider\n                        if(cellCounter === row.cells.length-1) {\n                            diffToLeader = leaderPoints - cell.innerText\n                            diffToAbove = tmpPoints - cell.innerText\n\n                            if(diffToLeader <= 0) {\n                                diffToLeader = '-';\n                            }\n                            if(diffToAbove <= 0) {\n                                diffToAbove = '-';\n                            }\n\n                            tmpPoints = cell.innerText;\n                        }\n                        cellCounter++;\n                    }\n                    // Close tr\n                    newResultsTable += `<td>${diffToLeader}</td><td>${diffToAbove}</td></tr>`;\n                    rowCounter++;\n                }\n                let tableHeader = '<tr>\\n' +\n                    '                        <th></th>\\n' +\n                    '                        <th>Rider</th>\\n' +\n                    '                        <th>Team</th>\\n' +\n                    '                        <th>Nationality</th>\\n' +\n                    '                        <th>Points</th>\\n' +\n                    '                        <th>Diff to #1</th>\\n' +\n                    '                        <th>Diff to rider ahead</th>\\n' +\n                    '                    </tr>';\n                setResultsTable(newResultsTable)\n                setTableHeader(tableHeader)\n                assignButtonStatus({clicked: true, loading: false})\n                setLoadedRaceInfo();\n            })\n\n    }\n\n    const fetchSession = async () => {\n        assignButtonStatus({clicked: true, loading: true})\n        const results = await fetch(`/motogp/session?` + new URLSearchParams({\n            year: activeYear.year,\n            race: activeRace.race,\n            category: activeCategory.category,\n            session: activeSession.session,\n        }))\n\n        const data = await results.json()\n\n        let html = window.document.createElement('html');\n        html.innerHTML = data.data\n        let resultsTable = html.getElementsByTagName('table')[0]\n        let sessionInfoTable = html.getElementsByTagName('table')[1]\n        let sessionTrackInfo = html.getElementsByClassName('padright10')[0].innerText.split(' ')[2];\n        let sessionWeatherInfo = html.getElementsByClassName('padright10')[1].innerText.split(' ')[1];\n        let rowCounter = 0;\n        let newResultsTable = '';\n\n        let sessionInfoRowCounter = 0;\n        let poleLapInfo = '';\n\n        let sessionBestLapLap = '';\n        let sessionBestLapTime = '';\n        let sessionBestLapRider = '';\n        let sessionBestLapSpeed = '';\n\n        let lapRecordYear = '';\n        let lapRecordLapTime = '';\n        let lapRecordRider = '';\n        let lapRecordSpeed = '';\n\n        let raceLapRecordYear = '';\n        let raceLapRecordLapTime = '';\n        let raceLapRecordRider = '';\n        let raceLapRecordSpeed = '';\n\n        if(sessionInfoTable.rows.length === 4) {\n            sessionBestLapLap = sessionInfoTable.rows[1].cells[1].innerText.split(' ')[1];\n            sessionBestLapTime = sessionInfoTable.rows[1].cells[3].innerText;\n            sessionBestLapRider = sessionInfoTable.rows[1].cells[2].innerText;\n            sessionBestLapSpeed = sessionInfoTable.rows[1].cells[4].innerText;\n\n            raceLapRecordYear = sessionInfoTable.rows[2].cells[1].innerText;\n            raceLapRecordLapTime = sessionInfoTable.rows[2].cells[3].innerText;\n            raceLapRecordRider = sessionInfoTable.rows[2].cells[2].innerText;\n            raceLapRecordSpeed = sessionInfoTable.rows[2].cells[4].innerText;\n\n            lapRecordYear = sessionInfoTable.rows[3].cells[1].innerText;\n            lapRecordLapTime = sessionInfoTable.rows[3].cells[3].innerText;\n            lapRecordRider = sessionInfoTable.rows[3].cells[2].innerText;\n            lapRecordSpeed = sessionInfoTable.rows[3].cells[4].innerText;\n        } else if (sessionInfoTable.rows.length === 3) {\n            sessionBestLapLap = sessionInfoTable.rows[0].cells[1].innerText.split(' ')[1];\n            sessionBestLapTime = sessionInfoTable.rows[0].cells[3].innerText;\n            sessionBestLapRider = sessionInfoTable.rows[0].cells[2].innerText;\n            sessionBestLapSpeed = sessionInfoTable.rows[0].cells[4].innerText;\n\n            raceLapRecordYear = sessionInfoTable.rows[1].cells[1].innerText;\n            raceLapRecordLapTime = sessionInfoTable.rows[1].cells[3].innerText;\n            raceLapRecordRider = sessionInfoTable.rows[1].cells[2].innerText;\n            raceLapRecordSpeed = sessionInfoTable.rows[1].cells[4].innerText;\n\n            lapRecordYear = sessionInfoTable.rows[2].cells[1].innerText;\n            lapRecordLapTime = sessionInfoTable.rows[2].cells[3].innerText;\n            lapRecordRider = sessionInfoTable.rows[2].cells[2].innerText;\n            lapRecordSpeed = sessionInfoTable.rows[2].cells[4].innerText;\n        }\n\n        assignSessionData({\n            track: sessionTrackInfo,\n            air: sessionWeatherInfo,\n            sessionBestLapLap: sessionBestLapLap,\n            sessionBestLapTime: sessionBestLapTime,\n            sessionBestLapRider: sessionBestLapRider,\n            sessionBestLapSpeed: sessionBestLapSpeed,\n            lapRecordYear: lapRecordYear,\n            lapRecordLapTime: lapRecordLapTime,\n            lapRecordRider: lapRecordRider,\n            lapRecordSpeed: lapRecordSpeed,\n            raceLapRecordYear: raceLapRecordYear,\n            raceLapRecordLapTime: raceLapRecordLapTime,\n            raceLapRecordRider: raceLapRecordRider,\n            raceLapRecordSpeed: raceLapRecordSpeed,\n            poleLap: poleLapInfo\n        })\n\n        for (let row of resultsTable.rows)\n        {\n            let cellCounter = 0;\n            if(rowCounter === 0) {\n                rowCounter++;\n                continue;\n            }\n            // Open tr\n            newResultsTable += '<tr>';\n            for(let cell of row.cells)\n            {\n                let val = cell.innerText;\n\n                // First cell, holds position in championship\n                if(cellCounter === 0) {\n                    newResultsTable += `<td>#${val}</td>`\n                    cellCounter++;\n                    continue;\n                }\n\n                // Country flag\n                if(activeSession.session.includes('RAC') && cellCounter === 4 || !activeSession.session.includes('RAC') && cellCounter === 3) {\n                    let country = Country(val);\n\n                    newResultsTable += `<td><img class='country-flag' src='https://cdn.jsdelivr.net/gh/hampusborgos/country-flags@main/svg/${country}.svg' /></td>`\n                    cellCounter++;\n                    continue;\n                }\n                newResultsTable += `<td>${val}</td>`\n                cellCounter++;\n            }\n            // Close tr\n            newResultsTable += `</tr>`;\n            rowCounter++;\n        }\n\n        let showGap = activeSession.session.includes('RAC') ? '' : '<th>Gap to #1 / ahead</th>';\n        let showPoints = activeSession.session.includes('RAC') ? '<th>Points</th>' : '';\n\n\n        let tableHeader = '<tr>\\n' +\n            '                        <th></th>\\n' +\n                                    `${showPoints}\\n` +\n            '                        <th>Num</th>\\n' +\n            '                        <th>Rider</th>\\n' +\n            '                        <th>Nation</th>\\n' +\n            '                        <th>Team</th>\\n' +\n            '                        <th>Bike</th>\\n' +\n            '                        <th>Km/h</th>\\n' +\n            '                        <th>Time</th>\\n' +\n                                    `${showGap}\\n` +\n            '                    </tr>';\n        setSessionTable(newResultsTable)\n        setSessionTableHeader(tableHeader)\n        assignButtonStatus({clicked: true, loading: false})\n        setLoadedRaceInfo();\n    }\n\n    const buttonClick = async () => {\n        setErrorStatus({status: false})\n        activeType.type === 'Total standings' ? fetchResults() : fetchSession();\n        assignFilterStatus({changed: false})\n    }\n\n    // Use useEffect to call setYears() on initial render\n    useEffect(() => {\n        setYears()\n    }, [])\n\n    useEffect(() => {\n        fetchRaces()\n    }, [activeYear.year])\n\n    useEffect(() => {\n        if(activeRace.race !== undefined && activeRace.race !== '') {\n            fetchCategories()\n        }\n        if(activeCategory.category !== undefined && activeCategory.category !== ''  && activeRace.race !== undefined && activeRace.race !== '') {\n            fetchSessions()\n        }\n    }, [activeRace.raceName])\n\n    useEffect(() => {\n        if(activeCategory.category !== undefined && activeCategory.category !== '' && activeRace.race !== undefined && activeRace.race !== '') {\n            fetchSessions()\n        }\n    }, [activeCategory.category])\n\n    useEffect(() => {\n        if(activeRace.dropdownOpen === true) {\n            assignCategory({category:activeCategory.category, dropdownOpen: false})\n            assignYear({year:activeYear.year, dropdownOpen: false})\n            assignType({type:activeType.type, dropdownOpen: false})\n            assignSession({session:activeSession.session, dropdownOpen: false})\n        }\n    }, [activeRace.dropdownOpen])\n\n    useEffect(() => {\n        if(activeCategory.dropdownOpen === true) {\n            assignRace({race:activeRace.race, raceName:activeRace.raceName, dropdownOpen: false})\n            assignYear({year:activeYear.year, dropdownOpen: false})\n            assignType({type:activeType.type, dropdownOpen: false})\n            assignSession({session:activeSession.session, dropdownOpen: false})\n        }\n    }, [activeCategory.dropdownOpen])\n\n    useEffect(() => {\n        if(activeType.dropdownOpen === true) {\n            assignCategory({category:activeCategory.category, dropdownOpen: false})\n            assignYear({year:activeYear.year, dropdownOpen: false})\n            assignRace({race:activeRace.race, raceName:activeRace.raceName, dropdownOpen: false})\n            assignSession({session:activeSession.session, dropdownOpen: false})\n        }\n    }, [activeType.dropdownOpen])\n\n    useEffect(() => {\n        if(activeSession.dropdownOpen === true) {\n            assignCategory({category:activeCategory.category, dropdownOpen: false})\n            assignYear({year:activeYear.year, dropdownOpen: false})\n            assignType({type:activeType.type, dropdownOpen: false})\n            assignRace({race:activeRace.race, raceName:activeRace.raceName, dropdownOpen: false})\n        }\n    }, [activeSession.dropdownOpen])\n\n    useEffect(() => {\n        if(activeYear.dropdownOpen === true) {\n            assignCategory({category:activeCategory.category, dropdownOpen: false})\n            assignSession({session:activeSession.session, dropdownOpen: false})\n            assignType({type:activeType.type, dropdownOpen: false})\n            assignRace({race:activeRace.race, raceName:activeRace.raceName, dropdownOpen: false})\n        }\n    }, [activeYear.dropdownOpen])\n\n    useEffect(() => {\n        if(button.clicked === true) {\n            assignFilterStatus({changed: true})\n        }\n    }, [activeSession.session, activeYear.year, activeCategory.category, activeRace.race, activeType.type])\n\n\n\n\n\n    return <div className={'index-main-results'} ref={props.refProp}>\n        <div className={'index-main-results-inner container'}>\n            <h2>\n                <Dropdown\n                    class = {'numbers'}\n                    activeItem={activeYear.year}\n                    onActiveClick = {() => assignYear({year:activeYear.year, dropdownOpen: activeYear.dropdownOpen !== true})}\n                    listItems = {yearsInFilter}\n                    isOpen={activeYear.dropdownOpen}\n                />\n                results\n            </h2>\n            <div className={'index-main-results-inner__filters'}>\n                <div className={'index-main-results-inner__filters__filter active'}>\n                    {loadingRaces === true &&\n                        <img className={'loader'} src={Loader} />\n                    }\n                    {loadingRaces === false &&\n                        <Dropdown\n                            class = {'races'}\n                            activeItem={activeRace.raceName}\n                            onActiveClick = {() => assignRace({race:activeRace.race, raceName:activeRace.raceName, dropdownOpen: activeRace.dropdownOpen !== true})}\n                            listItems = {racesInFilter}\n                            isOpen={activeRace.dropdownOpen}\n                        />\n                    }\n                </div>\n                {categoriesInFilter.length > 0 &&\n                    <div className={'index-main-results-inner__filters__filter active'}>\n                        {loadingCategories === true &&\n                        <img className={'loader'} src={Loader} />\n                        }\n                        {loadingCategories === false &&\n                        <Dropdown\n                            class = {'categories'}\n                            noOfCategories={categoriesInFilter.length}\n                            activeItem={activeCategory.category}\n                            onActiveClick = {() => assignCategory({category:activeCategory.category, dropdownOpen: activeCategory.dropdownOpen !== true})}\n                            listItems = {categoriesInFilter}\n                            isOpen={activeCategory.dropdownOpen}\n                        />\n                        }\n                    </div>\n                }\n                {categoriesInFilter.length > 0 &&\n                    <div className={'index-main-results-inner__filters__filter active'}>\n                        {loadingSessions === true &&\n                        <img className={'loader'} src={Loader} />\n                        }\n                        {loadingSessions === false &&\n                        <Dropdown\n                            class={'sessions'}\n                            noOfCategories={categoriesInFilter.length}\n                            activeItem={activeSession.session}\n                            onActiveClick={() => assignSession({\n                                session: activeSession.session,\n                                dropdownOpen: activeSession.dropdownOpen !== true\n                            })}\n                            listItems={sessionsInFilter}\n                            isOpen={activeSession.dropdownOpen}\n                        />\n                        }\n                    </div>\n                }\n                <Dropdown\n                    class = {'type'}\n                    noOfCategories={categoriesInFilter.length}\n                    activeItem={activeType.type}\n                    onActiveClick = {() => assignType({type:activeType.type, dropdownOpen: activeType.dropdownOpen !== true})}\n                    listItems = {[<div onClick={() => typeClick('Total standings')}>Total standings</div>, <div onClick={() => typeClick('Session')}>Session</div>]}\n                    isOpen={activeType.dropdownOpen}\n                />\n            </div>\n            <Fade in={error.status}>\n                <div className={error.status ? 'error-msg active' : 'error-msg'}>\n                    <div className={'error-msg__title'}><i className=\"fas fa-exclamation-triangle\"></i>There's no data for the {activeRace.raceName}!</div>\n                    <div>This is most likely because the {activeRace.raceName} has no completed sessions yet, or it could be\n                        a temporary issue with getting the race data.\n                    </div>\n                    <div className={'error-msg__later'}>Please change race or try again later.</div>\n                </div>\n            </Fade>\n                <button onClick={buttonClick} className={button.loading === true ? 'loading' : ''}>\n                    <img className={'loader'} src={Loader} />\n                    <span>Go</span>\n                </button>\n            <Fade in={categoriesInFilter.length > 0 && activeType.type === loadedSessionInfo.type}>\n                <div className={'loaded-view-info'}>\n                    <Fade in={button.loading}>\n                        <div className={'loaded-view-info__blur'}></div>\n                    </Fade>\n                    <div className={'loaded-view-info__text'}>{loadedSessionInfo.text}</div>\n                    {activeType.type === 'Session' &&\n                        <div className={'loaded-view-info__columns'}>\n                            <div className={'loaded-view-info__columns__column'}>\n                                <div className={'loaded-view-info__columns__column__title'}>Track conditions</div>\n                                {activeType.type === 'Session' &&\n                                    <Weather\n                                        type={activeSessionData.track}\n                                        degrees={activeSessionData.air}\n                                    />\n                                }\n                            </div>\n                            <div className={'loaded-view-info__columns__column'}>\n                                <div className={'loaded-view-info__columns__column__title'}>Session best lap</div>\n                                <div>{activeSessionData.sessionBestLapRider}</div>\n                                <div>{activeSessionData.sessionBestLapTime}</div>\n                                <div>{activeSessionData.sessionBestLapSpeed}</div>\n                                <div>Lap: {activeSessionData.sessionBestLapLap}</div>\n                            </div>\n                            <div className={'loaded-view-info__columns__column'}>\n                                <div className={'loaded-view-info__columns__column__title'}>Best race lap of all time</div>\n                                <div>{activeSessionData.raceLapRecordRider}</div>\n                                <div>{activeSessionData.raceLapRecordLapTime}</div>\n                                <div>{activeSessionData.raceLapRecordSpeed}</div>\n                                <div>Year: {activeSessionData.raceLapRecordYear}</div>\n                            </div>\n                            <div className={'loaded-view-info__columns__column'}>\n                                <div className={'loaded-view-info__columns__column__title'}>Best lap of all time</div>\n                                <div>{activeSessionData.lapRecordRider}</div>\n                                <div>{activeSessionData.lapRecordLapTime}</div>\n                                <div>{activeSessionData.lapRecordSpeed}</div>\n                                <div>Year: {activeSessionData.lapRecordYear}</div>\n                            </div>\n                        </div>\n                    }\n                    <Fade in={filtersChanged.changed}>\n                        <div className={'filters-changed-notice'}><i className=\"fas fa-exclamation-circle\"></i>Filters changed</div>\n                    </Fade>\n                </div>\n            </Fade>\n            {loadedSessionInfo.type === 'Total standings' && activeType.type === 'Total standings' && !error.status &&\n                <table>\n                    <Fade in={button.loading}>\n                        <div className={'loaded-view-info__blur'}></div>\n                    </Fade>\n                    <thead dangerouslySetInnerHTML={{__html: tableHeader}}>\n                    </thead>\n                    <tbody dangerouslySetInnerHTML={{__html: resultsTable}}></tbody>\n                </table>\n            }\n            {loadedSessionInfo.type === 'Session' && activeType.type === 'Session' && !error.status &&\n                <table>\n                    <Fade in={button.loading}>\n                        <div className={'loaded-view-info__blur'}></div>\n                    </Fade>\n                    <thead dangerouslySetInnerHTML={{__html: sessionTableHeader}}>\n                    </thead>\n                    <tbody dangerouslySetInnerHTML={{__html: sessionTable}}></tbody>\n                </table>\n            }\n        </div>\n    </div>\n}\n\nexport default Results;","import React from 'react';\nimport Background from '../assets/images/about-bg.svg';\n\nfunction About() {\n\n    return <div className={'index-main-about'}>\n        <img className={'index-main-about__bg'} src={Background} />\n        <div className={'index-main-about-inner container'}>\n            <h2 className={\"\"}>\n                About\n            </h2>\n            <p>\n                This site is a hobby of mine, meant to be an improvement of the results page that you can find on <a href={'https://www.motogp.com/en/Results+Statistics'} target={'_blank'}>motogp.com<i className=\"fas fa-external-link-alt\"></i></a>\n            </p>\n            <p>\n                Want to report a bug or just want to say hi? Send me an email and I'll try to get back to you as soon as possible.\n            </p>\n        </div>\n        <div className={'index-main-about-links container'}>\n            <a href={\"mailto:contact@domain.se\"}><i className=\"fas fa-envelope\"></i></a>\n        </div>\n        <div className={'index-main-about__from'}>Made in <img src='https://cdn.jsdelivr.net/gh/hampusborgos/country-flags@main/svg/se.svg'/></div>\n    </div>\n}\n\nexport default About;","// Import necessary dependencies\nimport React, {useRef} from 'react'\nimport MetaTags from 'react-meta-tags';\nimport Main from './views/main';\nimport Results from './views/results';\nimport About from './views/about';\n// Create App component\nfunction App() {\n\n    const myRef = useRef(null);\n    const executeScroll = () => myRef.current.scrollIntoView({ behavior: 'smooth', block: 'nearest'});\n\n\n    return (\n        <div className=\"app\">\n            <MetaTags>\n                <meta name=\"description\" content=\"Some description.\" />\n                <meta property=\"og:title\" content=\"MyApp\" />\n                <meta property=\"og:image\" content=\"../assets/images/share-img.png\" />\n            </MetaTags>\n            <Main\n                scroll={executeScroll}\n            />\n            <Results\n                refProp={myRef}\n            />\n            <About />\n        </div>\n    )\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './css/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}